<Window x:Class="CovaVSProj.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CovaVSProj"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1025" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="stockViewSource" d:DesignSource="{d:DesignInstance {x:Type local:Stock}, CreateList=True}"/>
        <CollectionViewSource x:Key="optionViewSource" d:DesignSource="{d:DesignInstance {x:Type local:Option}, CreateList=True}"/>
        <Style x:Key="Label" TargetType="{x:Type Label}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Height" Value="23"/>
        </Style>
        <Style x:Key="StockTextBox" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Width" Value="120"/>
        </Style>
        <RoutedUICommand x:Key="FirstCommand" Text="First"/>
        <RoutedUICommand x:Key="LastCommand" Text="Last"/>
        <RoutedUICommand x:Key="NextCommand" Text="Next"/>
        <RoutedUICommand x:Key="PreviousCommand" Text="Previous"/>
        <RoutedUICommand x:Key="DeleteStockCommand" Text="Delete Stock"/>
        <RoutedUICommand x:Key="DeleteOptionCommand" Text="Delete Option"/>
        <RoutedUICommand x:Key="UpdateCommand" Text="Update"/>
        <RoutedUICommand x:Key="AddCommand" Text="Add"/>
        <RoutedUICommand x:Key="CancelCommand" Text="Cancel"/>
        <Style x:Key="NavButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
            <Setter Property="Margin" Value="2,2,2,0"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="auto"/>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource FirstCommand}" Executed="FirstCommandHandler"/>
        <CommandBinding Command="{StaticResource LastCommand}" Executed="LastCommandHandler"/>
        <CommandBinding Command="{StaticResource NextCommand}" Executed="NextCommandHandler"/>
        <CommandBinding Command="{StaticResource PreviousCommand}" Executed="PreviousCommandHandler"/>
        <CommandBinding Command="{StaticResource DeleteStockCommand}" Executed="DeleteStockCommandHandler"/>
        <!--<CommandBinding Command="{StaticResource DeleteOrderCommand}" Executed="DeleteOrderCommandHandler"/>-->
        <CommandBinding Command="{StaticResource UpdateCommand}" Executed="UpdateCommandHandler"/>
        <!--<CommandBinding Command="{StaticResource AddCommand}" Executed="AddCommandHandler"/>-->
        <!--<CommandBinding Command="{StaticResource CancelCommand}" Executed="CancelCommandHandler"/>-->
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel  Orientation="Horizontal" Margin="2,2,2,0" Height="36" VerticalAlignment="Top" Background="Gainsboro" DataContext="{StaticResource stockViewSource}" >
            <Button Name="btnFirst" Content="|◄" Command="{StaticResource FirstCommand}" Style="{StaticResource NavButton}"  />
            <Button Name="btnPrev"  Content="◄" Command="{StaticResource PreviousCommand}" Style="{StaticResource NavButton}"/>
            <Button Name="btnNext"  Content="►" Command="{StaticResource NextCommand}"     Style="{StaticResource NavButton}"/>
            <Button Name="btnLast"  Content="►|" Command="{StaticResource LastCommand}" Style="{StaticResource NavButton}"/>
            <Button Name="btnDelete" Content="Delete Security" Command="{StaticResource DeleteStockCommand}" FontSize="11" Width="120" Style="{StaticResource NavButton}"/>
            <Button Name="btnAdd"   Content="New Security"  Command="{StaticResource AddCommand}" FontSize="11" Width="80" Style="{StaticResource NavButton}"/>
            <!--<Button Content="New Option" Name="btnNewOrder" FontSize="11" Width="80" Style="{StaticResource NavButton}" Click="NewOption_click"/>-->
            <Button Name="btnUpdate" Content="Commit" Command="{StaticResource UpdateCommand}" FontSize="11" Width="80" Style="{StaticResource NavButton}"/>
            <Button Content="Cancel" Name="btnCancel"  Command="{StaticResource CancelCommand}" FontSize="11" Width="80" Style="{StaticResource NavButton}"/>
        </StackPanel>
        <Grid x:Name="existingStockGrid" Grid.Row="1" HorizontalAlignment="Left" Margin="5" Visibility="Visible" VerticalAlignment="Top" Background="AntiqueWhite" DataContext="{StaticResource stockViewSource}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="233"/>
                <ColumnDefinition Width="Auto" MinWidth="397"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                     </Grid.RowDefinitions>
            <Label Content="Stock ID:" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="stockIDTextBox"  Grid.Row="0" Style="{StaticResource StockTextBox}"   
                  Text="{Binding id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Stock Name:"  Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="companyNameTextBox"  Grid.Row="1" Style="{StaticResource StockTextBox}"   
                  Text="{Binding name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
        </Grid>
        <Grid x:Name="newStockGrid" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=newStock, UpdateSourceTrigger=Explicit}" Visibility="Collapsed" Background="CornflowerBlue">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="233"/>
                <ColumnDefinition Width="Auto" MinWidth="397"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Stock ID:" Grid.Row="0" Style="{StaticResource Label}"/>
            <TextBox x:Name="add_customerIDTextBox"  Grid.Row="0"  Style="{StaticResource StockTextBox}"   
                  Text="{Binding id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Company Name:"  Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="add_companyNameTextBox"  Grid.Row="1" Style="{StaticResource StockTextBox}"   
                  Text="{Binding name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true }"/>
        </Grid>
        <Grid x:Name="newOptionGrid" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5" DataContext="{Binding Path=newOrder, Mode=TwoWay}" Visibility="Collapsed" Background="LightGreen">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="233"/>
                <ColumnDefinition Width="Auto" MinWidth="397"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
        </Grid>
        <!--<Grid x:Name="newOrderGrid" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5" DataContext="{Binding Path=newOrder, Mode=TwoWay}" Visibility="Collapsed" Background="LightGreen">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="233"/>
                <ColumnDefinition Width="Auto" MinWidth="397"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="New Order Form" FontWeight="Bold"/>
            <Label Content="Employee ID:"  Grid.Row="1" Style="{StaticResource Label}"/>
            <TextBox x:Name="add_employeeIDTextBox" Grid.Row="1" Style="{StaticResource StockTextBox}"   
                  Text="{Binding EmployeeID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Order Date:"  Grid.Row="2" Style="{StaticResource Label}"/>
            <DatePicker x:Name="add_orderDatePicker" Grid.Row="2"  HorizontalAlignment="Right" Width="120"  
                 SelectedDate="{Binding OrderDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Required Date:" Grid.Row="3" Style="{StaticResource Label}"/>
            <DatePicker x:Name="add_requiredDatePicker" Grid.Row="3" HorizontalAlignment="Right" Width="120"  
                  SelectedDate="{Binding RequiredDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Shipped Date:"  Grid.Row="4"  Style="{StaticResource Label}"/>
            <DatePicker x:Name="add_shippedDatePicker"  Grid.Row="4"  HorizontalAlignment="Right" Width="120"  
                 SelectedDate="{Binding ShippedDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Ship Via:"  Grid.Row="5" Style="{StaticResource Label}"/>
            <TextBox x:Name="add_ShipViaTextBox"  Grid.Row="5" Style="{StaticResource StockTextBox}"   
                  Text="{Binding ShipVia, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
            <Label Content="Freight"  Grid.Row="6" Style="{StaticResource Label}"/>
            <TextBox x:Name="add_freightTextBox" Grid.Row="6" Style="{StaticResource StockTextBox}"   
                  Text="{Binding Freight, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
        </Grid>-->
        <DataGrid x:Name="ordersDataGrid" SelectionUnit="Cell" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="false" IsEnabled="True" EnableRowVirtualization="True" Width="auto" ItemsSource="{Binding Source={StaticResource optionViewSource}}" Margin="10,10,10,10" Grid.Row="2" RowDetailsVisibilityMode="VisibleWhenSelected">
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="tickerId" Binding="{Binding id}" Header="Ticker" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="expiryDate" Binding="{Binding EmployeeID}" Header="Expiry" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="strikePrice" Binding="{Binding strike}"       Header="Strike" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="orderIDColumn" Binding="{Binding OrderID}" Header="TimeValue" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="intrinsicValue"         Binding="{Binding ShipAddress}" Header="INT VAL" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="upsidePotential"        Binding="{Binding ShipAddress}" Header="UPS POT" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="downsideProtection"     Binding="{Binding ShipCity}" Header="DWN PRT" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="breakEven"              Binding="{Binding ShipCountry}" Header="BRK EVN" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="initialReturnOfOption"  Binding="{Binding ShipName}" Header="INI ROO" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="annualizedReturnOfOption" Binding="{Binding ShipName}" Header="ANN ROO" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="accruedProfit"          Binding="{Binding ShipName}" Header="ACR PRF" Width="SizeToHeader"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
